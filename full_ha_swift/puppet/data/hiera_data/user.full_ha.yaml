#
# this emulates provided user data
#
# This file lists settings which are required for full_ha deployments of
# OpenStack.
#
# In addition to this file, also edit user.common.yaml. Most variables
# which apply to all OpenStack deployments regardless of scenario are
# found there.
#

# This is the short hostname (not FQDN) used to refer to the VIP which
# sits in front of all clustered OpenStack control services.
coe::base::controller_hostname: control-server

# Specify the URI to be used by horizon to access keystone. For full_ha
# this should use the controller VIP to access keystone.
horizon::keystone_url: 'http://172.29.XX.XXX:5000/v2.0/'

# Most passwords are set in user.common.yaml. Password settings which
# need to be customized for full_ha are defined here.
#
# metadata_shared_secret needs to be undefined for full_ha deployments
metadata_shared_secret: false

#
# HA connections
#
# controller_names sets the short hostnames (not FQDN) of the
# controller nodes.
controller_names:
  - control01
  - control02
  - control03
# controller_ipaddresses lists the real IP addresses of the controller
# nodes which are being clustered behind the controller VIP.
openstack-ha::load-balancer::controller_ipaddresses:
  - 172.29.XX.XXX
  - 172.29.XX.XXX
  - 172.29.XX.XXX
# controller_vrid sets the VRID of the VRRP router used for HA of OpenStack
# control services. Change this if the default value conflicts with
# existing VRRP groups in your environment.
openstack-ha::load-balancer::controller_vrid: '50'
# swift_proxy_names sets the short hostnames (not FQDN) of the Swift
# proxy nodes.
openstack-ha::load-balancer::swift_proxy_names:
  - swift-proxy01
  - swift-proxy02
# swift_proxy_ipaddresses lists the real IP addresses of the Swift
# proxy nodes which are being clustered behind the Swift VIP.
openstack-ha::load-balancer::swift_proxy_ipaddresses:
  - 172.29.XX.XXX
  - 172.29.XX.XXX
# swift_proxy_net_ip lists the VIP used in front of swift_proxy_ipaddresses
openstack::swift::proxy::swift_proxy_net_ip: "%{ipaddress_p4p1}"
# swift_vrid sets the VRID of the VRRP router used for HA of Swift
# services. Change this if the default value conflicts with existing
# VRRP groups in your environment.
openstack-ha::load-balancer::swift_vrid: '51'
# memcached_servers lists the real IP addresses and ports of the
# memcached services on the controller nodes.
nova::memcached_servers:
  - 172.29.XX.XXX:11211
  - 172.29.XX.XXX:11211
  - 172.29.XX.XXX:11211
# swift_memcache_servers lists the real IP addresses and ports of
# the memcached services on the Swift proxy nodes.
openstack::swift::proxy::swift_memcache_servers:
  - 172.29.XX.XXX:11211
  - 172.29.XX.XXX:11211
# rabbit_hosts lists the short hostnames (not FQDN) and ports of the
# RabbitMQ services on the control nodes.
rabbit_hosts:
  - control01:5672
  - control02:5672
  - control03:5672
# galera_servers lists the IP addresses of the nodes which comprise
# the HA MySQL database
galera::galera_servers:
  - 172.29.XX.XXX
  - 172.29.XX.XXX
  - 172.29.XX.XXX
# galera_master defines which node of the galera_servers is the 'master'
# node for bootstrapping purposes; once the cluster is functional this
# distinction has no meaning. This should be the FQDN for that node.
galera::galera_master: control01.ctocllab.cisco.com
# galera is currently configured with an active-passive load balancer in
# front of it to restrict writes to a single node. This is needed as a
# workaround for compatibility issues with Galera and certain sql statements
# currently used in OpenStack code. See
# https://bugs.launchpad.net/openstack-cisco/+bug/1321734 for more details.
#
# galera_master_ipaddress is the IP address of the initial node in the
# Galera which gets writes by default
galera_master_ipaddress: 172.29.XX.XXX
# galera_backup_ipaddresses lists the IP addresses of the other nodes in
# the Galera cluster. HAProxy will direct writes to them if
# galera_master_ipaddress is not reachable
galera_backup_ipaddresses:
  - 172.29.XX.XXX
  - 172.29.XX.XXX
# galera_master_name is the bare hostname (not FQDN) of galera_master_ipaddress
galera_master_name: control01
# galera_backup_names is the bare hostname (not FQDN) of the nodes listed in
# galera_backup_ipaddresses
galera_backup_names:
  - control02
  - control03

# NOTE: Uncomment the following with appropriate values if using mongo
# as backend for ceilometer
# The short hostnames and port numbers of the hosts on which
# mongodb is running
#mongodb::replset::sets:
#  rsmain:
#    members:
#      - control01:27017
#      - control02:27017
#      - control03:27017
# bind_address specifies the IP address on each control node to which
# the OpenStack APIs should bind.
bind_address: "%{ipaddress_p4p1}"

openstack::swift::storage-node::ring_server: 172.29.XX.XXX

# If you wish to use Cinder iSCSI, then uncomment and configure this
# line. Full HA defaults to using ceph, which does not need this param.
# Ceph settings are configured in user.common.yaml
# cinder::volume::iscsi::iscsi_ip_address: "%{ipaddress_eth0}"

# cinder_backend configures cinder with specific volume driver(s).
# in full_ha, Ceph is the source for block storage
cinder_backend: rbd

# full_ha uses the OpenStack provider networking model. In this model,
# network_vlan_ranges specifies the VLAN tag range being provided to OVS.
#quantum::plugins::ovs::network_vlan_ranges: physnet1:223:225
#neutron::plugins::ovs::network_vlan_ranges: physnet1:223:225

# storage_type specifies what type of storage is being used on the Swift
# storage nodes. This should typically be left as 'disk', though loop-back
# files can be used instead by setting this to 'loopback'.
openstack::swift::storage-node::storage_type: disk
# storage_devices specifies the disks on each Swift storage node which
# are dedicated for Swift storage. Individual server deviations from this
# default can be specified in the hostname.yaml files.
openstack::swift::storage-node::storage_devices:
  - 'sdb'
  - 'sdc'
  - 'sdd'
  - 'sde'
  - 'sdf'
